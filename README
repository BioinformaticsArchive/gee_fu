What is gee_fu?
gee_fu is a Ruby on Rails  based RESTful web-service application that serves genome feature data on request. It is ideally suited to serving large amounts of data such as those from high-throughput sequencing experiments. gee_fu can be used in conjunction with web-service viewports such as AnnoJ to create very fast, data-rich, attractive, RDBMS agnostic genome browsers that can be easily extended into fuller custom web-applications using the powerful Rails framework.


How gee_fu fits into the web service world
gee\_fu is an application centered around a database schema that holds GFF3 formatted data. It has been designed with the needs of researchers wanting to view high throughput sequencing data in a genome browser. In the jargon of web applications it is the Model and Controller of the Model View Controller framework.  On request from a web service it will search the database on the basis of the parameters of the request and return a result. As an instance of a Rails application gee_fu can be used with any type of RDBMS currently supported by Rails  without modification. At this stage in development gee_fu is capable of receiving and handling requests from AnnoJ , a web service based viewing engine for genomic data. It returns json  data which AnnoJ is able to render. We anticipate being able to serve up data in formats suitable for different applications as development progresses and we become aware of other rendering engines and web services that request data. Already gee_fu and AnnoJ make a powerful, fast and easily set up genome browser. 


Setting up gee_fu

gee_fu requires a working internet connection and the following software and packages to be available before installation

Ruby  1.8.7 or later
Rails  2.3.4 or later

These rubygems
BioRuby 1.3.1 or later
JSON 
FFI 0.6.3 or later

You will also require a RDBMS such as mySQL, ORACLE, PostGreSQL 


Schema
The schema is very straightforward and easily extended. It consists of a central Features table and a many to many join table Parents that indicates which features are parents (according to their gff records) of which other features.

Extending the database and creating new functionality
You can extend the database exactly as if it were any other Rails application. See the Rails documentation for conventions for creating and naming new tables, Rails prefers convention over configuration so you should pay attention to these. Adding new functionality to the web app is covered by the same documentation. 

Where to find more info
If you get really frustrated with the software, feel free to complain to me dan.maclean@tsl.ac.uk. I freely admit its early days for this project so it is likely to wobble, however, a lot of your initial problems will be answered in the Rails community pages, please look there if your problem looks like it might be related to Rails more directly than this particular instance of a Rails app.



Setup.
rake db:create
rake add:assembly_to_yml fasta=public/sequences/sample_reference_TAIR9_Chr1.fna
rake db:schema:load
rake add:config_to_db
rake create:config
rake add:features desc="TAIR 9 Sample Features" exp="gene_models" gff=public/sample_gffs/sample_features.gff genome=1
rake add:features desc="sample_reads" exp="gff_format_reads_from_rdbms" gff=public/sample_gffs/sample_reads.gff genome=1
rake add:features bam=public/bam/aln.sort.bam exp='bam format sample reads from bam file' desc='sample reads from bam' genome=1 


