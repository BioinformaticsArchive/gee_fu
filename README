What is Gee Fu?
Gee Fu is a Ruby on Rails based RESTful web-service application that stores and serves sequence assembly and genome feature data on request. Gee Fu It is ideally suited to serving large amounts of data such as those from high-throughput sequencing experiments via samtools-ruby and BAM files. GeeFu can be used in conjunction with web-service viewports such as AnnoJ to create very fast, data-rich, attractive, RDBMS agnostic genome browsers that can be easily extended into fuller custom web-applications using the powerful Rails framework.


How Gee Fu fits into the web service world
Gee Fu is an application centred around a database schema that holds GFF3 formatted data. It has been designed with the needs of researchers wanting to keep and annotate sequence and feature data. In the jargon of web applications it is the Model and Controller of the Model View Controller framework.  On request from a web service, script or the built-in web forms it will search the database on the basis of the parameters of the request and return a result. As an instance of a Rails application Gee Fu can be used with any type of RDBMS currently supported by Rails without modification. At this stage in development Gee Fu is capable of receiving and handling requests from AnnoJ , a web service based viewing engine for genomic data. It can return JSON data which AnnoJ is able to render. We anticipate being able to serve up data in formats suitable for different applications as development progresses and we become aware of other rendering engines and web services that request data. 


Setting up Gee Fu

Gee Fu requires a working internet connection and the following software and packages to be available before installation

Ruby  1.8.x (not Ruby 1.9.x)
Rails  2.3.x (not Rails 3.x.x)

These rubygems
BioRuby 1.3.1 or later
JSON 
bio-samtools

You will also require a RDBMS such as mySQL, ORACLE, PostGreSQL 


Schema
The schema is very straightforward and easily extended. It consists of a central Features table and a many to many join table Parents that indicates which features are parents (according to their gff records) of which other features.

Extending the database and creating new functionality
You can extend the database exactly as if it were any other Rails application. See the Rails documentation for conventions for creating and naming new tables, Rails prefers convention over configuration so you should pay attention to these. Adding new functionality to the web app is covered by the same documentation. 

Where to find more info
If you get really frustrated with the software, feel free to complain to me dan.maclean@tsl.ac.uk. A lot of your initial problems will be answered in the Rails community pages, please look there if your problem looks like it might be related to Rails more directly than this particular instance of a Rails app.



Setup
rake db:create
rake db:schema:load
script/server
..then upload data via web forms at http://localhost:3000/begin

More Information
Please read the PDF document, doc/manual.pdf


